program -> func_declaration_list
func_declaration_list -> func_declaration | func_declaration func_declaration_list
func_declaration -> func_header instruction_block
func_header -> func_return "(" ")" | func_return "(" func_signature ")"
func_return -> type identifier | "void" identifier
func_signature ->  func_param_declaration | func_param_declaration "," func_signature
func_param_declaration -> type identifier
instruction_block -> "{" "}" | "{" instruction_list "}"
instruction_list -> instruction | instruction instruction_list
instruction ->  conditional_instr | loop_instr | return_instr | expr_instr | declaration_instr
declaration_instr -> type assignment_expr_list assingnment_expr ";" | type assignment_expr ";"
assignment_expr_list -> assignment_expr "," | assignment_expr "," assignment_expr_list
type -> "float" | "int" | "bool" | "char" | "float" array_type | "int" array_type | "bool" array_type | "char" array_type
array_type -> array_size | array_size array_type
array_size -> "[" constant "]"
conditional_instr -> if_instr elif_instr | if_instr elif_instr_list | if_instr elif_instr else_instr | if_instr elif_instr_list else_instr
if_instr -> "if" "(" expr ")" instruction_block
elif_instr_list -> elif_instr | elif_instr elif_instr_list
elif_instr -> "if" "else" "(" expr ")" instruction_block
else_instr -> "else" "(" expr ")" instruction_block
loop_instr -> "while" "(" expr ")" instruction_block
return_instr -> "return" expr ";"
expr_instr -> expr ";"
expr -> assignment_expr | binary_expr | pre_unary_expr | index_expr | call_expr | const | identifier
assignment_expr -> identifier "=" expr
binary_expr -> expr binary_op expr
binary_op -> "<" | ">" | "<=" | ">=" | "!=" | "==" | "+" | "-" | "/" | "*" | "and" | "or" | "^"
index_expr -> identifier subscript_list
subscript_list -> subscript | subscript subscript_list
subscript -> "[" expr "]"
pre_unary_expr -> pre_unary_op expr
pre_unary_op -> "+" | "-" | "!"
call_expr -> identifier "(" call_params ")"
call_params -> expr_list expr | expr
expr_list -> expr | expr "," expr_list